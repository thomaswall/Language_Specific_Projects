(define (append L1 L2)
  (cond ((null? L1) L2)
        (else (cons (car L1)  (append (cdr L1) L2)))
        )
)

(define (map f L)
   (cond ((null? L) '())
         (else (cons (f (car L)) (map f (cdr L))))
   )
)

(define (assoc key key-values)
	(if (eq? (car (car key-values)) key)
		(cadr (car key-values))
		(assoc key (cdr key-values))
	)
)